# Flutter KeyCheck CI/CD Configuration
# Quality gates and baseline management for enterprise deployment

# ==================================================
# Quality Gates Configuration
# ==================================================

quality_gates:
  # Coverage Requirements
  coverage:
    minimum_percentage: 80
    critical_keys_minimum: 4
    fail_on_regression: true
    
  # Performance Thresholds  
  performance:
    max_scan_duration_ms: 30000     # 30 seconds
    max_memory_usage_mb: 500        # 500MB
    regression_threshold: 0.20      # 20% performance regression
    
  # Blind Spot Limits
  blind_spots:
    max_allowed: 5
    critical_paths_required: true
    integration_test_validation: true

# ==================================================
# Baseline Management  
# ==================================================

baseline:
  # Golden workspace configuration
  golden_workspace: "test/golden_workspace"
  expected_keys_file: "test/golden_workspace/expected_keycheck.json"
  performance_baseline: "test/golden_workspace/performance_baseline.json"
  
  # Baseline update policy
  auto_update_on_main: false
  manual_update_required: true
  update_approval_required: true

# ==================================================
# CI/CD Integration Settings
# ==================================================

ci_integration:
  # GitHub Actions
  github_actions:
    fail_fast: true
    upload_artifacts: true
    artifact_retention_days: 30
    badge_generation: true
    
  # GitLab CI 
  gitlab_ci:
    fail_fast: true
    cache_dependencies: true
    parallel_jobs: true
    notification_on_failure: true
    
  # Pipeline stages
  stages:
    - validate    # KeyCheck validation with quality gates
    - test        # Unit tests and static analysis  
    - integrate   # Integration tests and regression
    - quality     # Quality assessment and security scan
    - performance # Performance benchmarking
    - report      # Report generation and analysis
    - deploy      # Deployment gates and publishing

# ==================================================
# Reporting Configuration
# ==================================================

reporting:
  # Output formats
  formats:
    - json        # Machine readable for CI/CD
    - markdown    # Human readable reports
    - junit       # CI/CD integration format
    - html        # Enterprise dashboard format
    
  # Report content
  include:
    - validation_summary
    - quality_gates_status
    - performance_metrics
    - regression_analysis
    - deployment_readiness
    - recommendations
    
  # Distribution
  artifacts:
    retention_days: 30
    upload_on_failure: true
    include_debug_logs: true

# ==================================================
# Notification Configuration  
# ==================================================

notifications:
  # Failure notifications
  on_failure:
    slack:
      enabled: false
      webhook_url: "${SLACK_WEBHOOK_URL}"
      channel: "#flutter-keycheck"
      mention_team: true
      
    email:
      enabled: false
      recipients:
        - "qa-team@company.com"
        - "devops-team@company.com"
      include_logs: true
      
  # Success notifications  
  on_success:
    slack:
      enabled: false
      celebrate_milestones: true
      
# ==================================================
# Security and Compliance
# ==================================================

security:
  # Dependency scanning
  dependency_check:
    enabled: true
    fail_on_vulnerabilities: true
    severity_threshold: "high"
    
  # Code scanning
  static_analysis:
    enabled: true
    tools:
      - dart_analyzer
      - pana_score
      - security_audit
      
  # Compliance requirements
  compliance:
    pana_minimum_score: 120
    license_validation: true
    breaking_change_detection: true

# ==================================================
# Environment-Specific Settings
# ==================================================

environments:
  development:
    quality_gates:
      coverage:
        minimum_percentage: 70  # Relaxed for development
      performance:
        max_scan_duration_ms: 60000  # 60 seconds for dev
        
  staging:
    quality_gates:
      coverage:
        minimum_percentage: 85  # Higher bar for staging
      performance:
        max_scan_duration_ms: 20000  # 20 seconds for staging
        
  production:
    quality_gates:
      coverage:
        minimum_percentage: 90  # Highest bar for production
      performance:
        max_scan_duration_ms: 15000  # 15 seconds for production
    security:
      enhanced_scanning: true
      approval_required: true

# ==================================================
# Advanced Features
# ==================================================

advanced:
  # Trend analysis
  trend_analysis:
    enabled: true
    history_retention_days: 90
    alert_on_degradation: true
    
  # A/B testing for performance
  performance_testing:
    enabled: false
    baseline_comparison: true
    statistical_significance: 0.95
    
  # Custom quality metrics
  custom_metrics:
    key_density_score: true
    automation_readiness_score: true
    maintainability_index: true