name: CI

on:
  push:
    branches: [main, flutter_keycheck_v3]
    tags: ['v3.*']
  pull_request:
    branches: [main, flutter_keycheck_v3]

jobs:
  test-matrix:
    name: Test & Analyze (${{ matrix.sdk }})
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        sdk: ['stable', 'beta']
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-dart-${{ matrix.sdk }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-dart-${{ matrix.sdk }}-
            ${{ runner.os }}-dart-
      
      - name: Install dependencies
        run: dart pub get
      
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
      
      - name: Analyze project source
        run: dart analyze --fatal-infos --fatal-warnings
      
      - name: Run tests with coverage
        run: dart test --coverage=coverage
      
      - name: Generate coverage report
        if: matrix.sdk == 'stable'
        run: |
          dart pub global activate coverage
          dart pub global run coverage:format_coverage \
            --lcov \
            --in=coverage \
            --out=coverage/lcov.info \
            --packages=.dart_tool/package_config.json \
            --report-on=lib
      
      - name: Upload coverage to Codecov
        if: matrix.sdk == 'stable'
        uses: codecov/codecov-action@v4
        with:
          file: coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  cli-smoke-tests:
    name: CLI Smoke Tests
    runs-on: ubuntu-latest
    needs: test-matrix
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
      
      - name: Install dependencies
        run: dart pub get
      
      - name: Compile executable
        run: dart compile exe bin/flutter_keycheck.dart -o flutter_keycheck
      
      - name: Test CLI help
        run: ./flutter_keycheck --help
      
      - name: Test CLI version
        run: ./flutter_keycheck --version
      
      - name: Test with sample keys
        run: |
          # Create a simple test case
          mkdir -p test_project/lib
          echo "Key('test_key')" > test_project/lib/main.dart
          echo "expected_keys:" > test_keys.yaml
          echo "  - test_key" >> test_keys.yaml
          
          # Run the tool
          ./flutter_keycheck --keys test_keys.yaml --path test_project
      
      - name: Global activation test
        run: |
          dart pub global activate --source path .
          ~/.pub-cache/bin/flutter_keycheck --help
      
      - name: CLI help snapshot check
        run: |
          dart run bin/flutter_keycheck.dart --help > /tmp/help.txt
          if [ -f docs/cli_help.snapshot ]; then
            diff -u docs/cli_help.snapshot /tmp/help.txt || echo "::warning::CLI help output has changed"
          fi

  package-quality:
    name: Package Quality Check
    runs-on: ubuntu-latest
    needs: test-matrix
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
      
      - name: Install dependencies
        run: dart pub get
      
      - name: Pub.dev dry run
        run: dart pub publish --dry-run
      
      - name: Pana analysis
        run: |
          dart pub global activate pana
          ~/.pub-cache/bin/pana --exit-code-threshold 0 . || echo "::warning::Pana score below threshold"
      
      - name: Check package constraints
        run: |
          echo "Checking SDK constraints..."
          grep "sdk:" pubspec.yaml
          echo "Checking dependencies..."
          dart pub deps --no-dev