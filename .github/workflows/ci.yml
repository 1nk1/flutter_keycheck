name: CI

on:
  push:
    branches: [ main, flutter_keycheck_v3 ]
    paths:
      - "lib/**"
      - "bin/**"
      - "test/**"
      - "pubspec.yaml"
      - ".github/workflows/ci.yml"
  pull_request:
    branches: [ main ]
    paths:
      - "lib/**"
      - "bin/**"
      - "test/**"
      - "pubspec.yaml"

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with: 
          sdk: stable
      - name: Pub get (with cache)
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: pub-${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: pub-${{ runner.os }}-
      - run: dart pub get
      - run: dart format --output=none --set-exit-if-changed .
      - run: dart analyze --fatal-infos --fatal-warnings

  test-blocking:
    runs-on: ubuntu-latest
    needs: analyze
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with: 
          sdk: stable
      - name: Cache pub/.dart_tool
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: pub-${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: pub-${{ runner.os }}-
      - run: dart pub get
      - name: Prepare reports dir (cross-platform)
        shell: bash
        run: '[ -d reports ] || mkdir -p reports'
      - name: Fast blocking suite (exclude nonblocking)
        run: |
          # Run critical tests only, exclude heavy tests
          dart test --chain-stack-traces -j 2 -r compact --exclude-tags nonblocking

  v3-commands-verification:
    runs-on: ubuntu-latest
    needs: analyze
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with: 
          sdk: stable
      - name: Cache pub/.dart_tool
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: pub-${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: pub-${{ runner.os }}-
      - run: dart pub get
      - name: Build executable
        run: dart compile exe bin/flutter_keycheck.dart -o flutter_keycheck
      - name: Test exit codes
        run: |
          # Test missing config returns exit code 2
          set +e
          ./flutter_keycheck scan --config ./DOES_NOT_EXIST.yaml
          EXIT_CODE=$?
          set -e
          if [ $EXIT_CODE -ne 2 ]; then
            echo "ERROR: Expected exit code 2 for missing config, got $EXIT_CODE"
            exit 1
          fi
          echo "✓ Missing config correctly returns exit code 2"
      - name: Test scope flags
        run: |
          ./flutter_keycheck scan --scope workspace-only --fail-on-parse-errors
          ./flutter_keycheck scan --scope deps-only --fail-on-parse-errors
          ./flutter_keycheck scan --scope all --fail-on-collision
          echo "✓ All scope variations work correctly"

  package-quality:
    runs-on: ubuntu-latest
    needs: analyze
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with: 
          sdk: stable
      - name: Cache pub/.dart_tool
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: pub-${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: pub-${{ runner.os }}-
      - run: dart pub get
      - name: Check pub publish dry-run
        run: dart pub publish --dry-run
      - name: Check package score with pana
        run: |
          dart pub global activate pana
          pana --no-warning --exit-code-threshold 90 .

  test-full-nonblocking:
    if: always()
    runs-on: ubuntu-latest
    needs: test-blocking
    continue-on-error: true
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with: 
          sdk: stable
      - name: Cache pub/.dart_tool
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: pub-${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
          restore-keys: pub-${{ runner.os }}-
      - run: dart pub get
      - name: Shard 1/2 - Nonblocking tests
        continue-on-error: true
        run: dart test --chain-stack-traces -j 2 -r compact --tags nonblocking --total-shards 2 --shard-index 0
      - name: Shard 2/2 - Nonblocking tests
        continue-on-error: true
        run: dart test --chain-stack-traces -j 2 -r compact --tags nonblocking --total-shards 2 --shard-index 1
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nonblocking-test-results
          path: reports/

  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [analyze, test-blocking, v3-commands-verification, package-quality]
    if: always()
    steps:
      - name: Check required jobs
        run: |
          if [ "${{ needs.analyze.result }}" != "success" ]; then
            echo "❌ Analyze job failed"
            exit 1
          fi
          if [ "${{ needs.test-blocking.result }}" != "success" ]; then
            echo "❌ Test blocking job failed"
            exit 1
          fi
          if [ "${{ needs.v3-commands-verification.result }}" != "success" ]; then
            echo "❌ V3 commands verification failed"
            exit 1
          fi
          if [ "${{ needs.package-quality.result }}" != "success" ]; then
            echo "❌ Package quality check failed"
            exit 1
          fi
          echo "✅ All required CI checks passed!"