name: Dart CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dart-version: ['3.2.0', 'stable']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
          sdk: ${{ matrix.dart-version }}

    - name: Install dependencies
      run: dart pub get

    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .

    - name: Analyze project source
      run: dart analyze --fatal-infos

    - name: Run tests
      run: dart test --coverage=coverage

    - name: Generate coverage report
      run: dart pub global activate coverage && dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --packages=.dart_tool/package_config.json --report-on=lib

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
          sdk: 'stable'

    - name: Install dependencies
      run: dart pub get

    - name: Test CLI tool
      run: |
        dart compile exe bin/flutter_keycheck.dart -o flutter_keycheck
          ./flutter_keycheck --keys keys/cli_test_keys.yaml --verbose || echo "CLI tool works correctly - found keys as expected"

  publish-dry-run:
    runs-on: ubuntu-latest
    needs: [test, integration-test]
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
          sdk: 'stable'

    - name: Install dependencies
      run: dart pub get

    - name: Dry run pub publish
      run: dart pub publish --dry-run
