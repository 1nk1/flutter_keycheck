# GitLab CI Pipeline for flutter_keycheck v3.0.0
# Reference: https://docs.gitlab.com/ee/ci/yaml/
image: dart:3.9.0

stages:
  - analyze
  - test
  - keycheck
  - demo
  - publish

variables:
  PUB_CACHE: "/root/.pub-cache"
  FKC_CACHE_TTL_HOURS: "0"  # Deterministic cache for CI
  # DART_VM_OPTIONS removed - not needed for Dart 3.9.0

# Workflow rules - only trigger on relevant changes
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - lib/**/*
        - bin/**/*
        - test/**/*
        - example/**/*
        - pubspec.yaml
        - .gitlab-ci.yml
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'
      changes:
        - lib/**/*
        - bin/**/*
        - test/**/*
        - example/**/*
        - pubspec.yaml
        - .gitlab-ci.yml
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'

cache:
  key:
    files:
      - pubspec.lock
  paths:
    - .dart_tool/
    - $PUB_CACHE/

.default_before: &default_before
  - dart --version
  - dart pub get

analyze:
  stage: analyze
  before_script: *default_before
  script:
    - dart analyze --fatal-infos --fatal-warnings

test:
  stage: test
  before_script: *default_before
  script:
    - mkdir -p reports
    - dart test -r expanded --concurrency=2 --file-reporter=json:reports/test_report.json
  artifacts:
    when: always
    paths:
      - reports/test_report.json
      - coverage/
    expire_in: 7 days

keycheck:
  stage: keycheck
  before_script:
    - *default_before
    - dart pub global activate --source path .
    - export PATH="$PATH:$PUB_CACHE/bin"
    - which flutter_keycheck
    - mkdir -p reports
  script:
    # Политики и сканы
    - flutter_keycheck scan --scope workspace-only
    - flutter_keycheck scan --scope deps-only
    - flutter_keycheck scan --scope all
    # Validation with policies
    - flutter_keycheck validate --fail-on-package-missing --fail-on-collision
    # Smoke: несуществующий конфиг должен возвращать exit 2
    - |
      set +e
      flutter_keycheck scan --scope workspace-only --config ./DOES_NOT_EXIST.json
      ec=$?
      echo "exit=$ec" | tee reports/keycheck_invalid_config_exit.txt
      if [ "$ec" -ne 2 ]; then
        echo "ERROR: Expected exit 2 for invalid config, got $ec"
        exit 1
      fi
      echo "✓ Missing config correctly returns exit code 2"
      set -e
  artifacts:
    when: always
    paths:
      - .dart_tool/flutter_keycheck/cache/
      - reports/
    expire_in: 7 days

demo_app_scan:
  stage: demo
  before_script:
    - *default_before
    - dart pub global activate --source path .
    - export PATH="$PATH:$PUB_CACHE/bin"
  script:
    - cd example/demo_app
    - dart pub get
    - flutter_keycheck scan --scope workspace-only
  artifacts:
    when: always
    paths:
      - example/demo_app/.dart_tool/flutter_keycheck/cache/
    expire_in: 7 days

# Publish dry-run on version tags
publish:
  stage: publish
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
      when: manual
  before_script:
    - *default_before
  script:
    # Verify version matches tag
    - |
      TAG=${CI_COMMIT_TAG#v}
      VERSION=$(grep '^version:' pubspec.yaml | cut -d' ' -f2)
      if [ "$TAG" != "$VERSION" ]; then
        echo "ERROR: Tag version ($TAG) does not match pubspec.yaml version ($VERSION)"
        exit 1
      fi
      echo "✓ Version $VERSION matches tag"
    - dart pub publish --dry-run
    # For actual publish, manually run with:
    # - dart pub publish -f